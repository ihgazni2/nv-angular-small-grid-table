{"version":3,"sources":["../../../projects/small-grid-table/src/lib/small-grid-table.component.html","../../../projects/small-grid-table/src/lib/small-grid-table.component.ts","../../../projects/small-grid-table/src/lib/util.ts","../../../projects/small-grid-table/src/lib/small-grid-table.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵelementContainer","i0.ɵɵelementEnd","i0.ɵɵstyleMap","i0.ɵɵadvance","i0.ɵɵproperty","i0","ɵɵpureFunction1","_c1","cell_r1","SmallGridTableComponent","cdref","this","prototype","ngOnInit","instance","dtb","forEach","row","r","cell","c","_r","_c","rownum","length","colnum","undefined","ratio","cell_width","parseInt","width","cell_height","height","toString","gutter","dflt","ui_func","flat","ui","set_ui","calc_and_set","ɵɵdirectiveInject","ChangeDetectorRef","selectors","contentQueries","rf","ctx","dirIndex","i0.ɵɵtemplate","i0.ɵɵstyleProp","SmallGridTableModule","forRoot","ngModule","providers","forChild","imports","CommonModule","MatCardModule","MatGridListModule","declarations","exports"],"mappings":"2lBAQKA,EAAAA,eAAAA,EAAAA,iBACKC,EAAAA,mBAAAA,EAAAA,GAKLC,EAAAA,2DANyCC,EAAAA,WAAAA,EAAAA,IAElCC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,mBAAAA,EAAAA,QAAAA,CAA4B,0BAAAC,EAAAC,gBAAA,EAAAC,EAAAC,sBCiCtC,SAAAC,EAAoBC,GAAAC,KAAAD,MAAAA,SAEpBD,EAAAG,UAAAC,SAAA,qBCR2BC,GAI3B,GAHOA,EAASC,IAjCZC,SAAQ,SAACC,EAAKC,GAChBD,EAAID,SAAQ,SAACG,EAAMC,GACjBD,EAAKE,GAAKH,EACVC,EAAKG,GAAKF,QA+BdN,EAASS,OAAST,EAASC,IAAIS,OAC/BV,EAASW,OAASX,EAASC,IAAI,GAAGS,YACXE,IAAnBZ,EAASa,MAAqB,CAChC,IAAIC,EAAaC,SAASf,EAASgB,OAAShB,EAASS,OACjDQ,EAAcF,SAASf,EAASkB,QAAUlB,EAASW,OACvDX,EAASa,MAAQC,EAAWK,WAAa,IAAMF,EAAYE,gBAGrCP,IAApBZ,EAASoB,SACXpB,EAASoB,OAAS,UAIER,IAAlBZ,EAASqB,OACXrB,EAASqB,MAAO,QAGOT,IAArBZ,EAASsB,UACXtB,EAASsB,QAAU,SAACjB,MAItBL,EAASuB,KAAmBvB,EAASC,IA5D5BsB,OA6DGvB,EAASuB,KAhDhBrB,SAAQ,SAAAG,QACMO,IAAZP,EAAKmB,KACNnB,EAAKmB,GAAG,OA+CVxB,EAASqB,OAzCUE,EAyCMvB,EAASuB,KAxCtCA,EAAKrB,SAAQ,SAAAG,GACAA,EAAKG,GAAK,GAAM,GACF,KAAZH,EAAKmB,KAChBnB,EAAKmB,GAAK,+GAKOD,EAAKD,GAC1BC,EAAKrB,SAAQ,SAAAG,GACTiB,EAAQjB,MA+BZoB,CAAOzB,EAASuB,KAAKvB,EAASsB,aA1CPC,EDwBrBG,CAAa7B,6CAjBJF,GAAuBJ,EAAAoC,kBAAApC,EAAAqC,sDAAvBjC,EAAuBkC,UAAA,CAAA,CAAA,wBAAAC,eAAA,SAAAC,EAAAC,EAAAC,iYD7BpChD,EAAAA,eAAAA,EAAAA,YAGIA,EAAAA,eAAAA,EAAAA,gBAAAA,GAKCiD,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,gBAAAA,GAOD/C,EAAAA,eACJA,EAAAA,sBAfIgD,EAAAA,YAAAA,QAAAA,EAAAA,MAAAA,MAGI9C,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,CAAe,YAAA0C,EAAAnB,MAAfvB,CAAe,aAAA0C,EAAAZ,QAIH/B,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,2HGepB,SAAA8C,YACgBA,EAAAC,QAAP,WACL,MAAO,CACLC,SAAUF,EACVG,UAAW,KAIDH,EAAAI,SAAP,WACL,MAAO,CACLF,SAAUF,EACVG,UAAW,0CAXJH,iEAAAA,IAAoBK,QAAA,CAPpB,CACLC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,uFAIKR,EAAoB,CAAAS,aAAA,CARdlD,GAAuB8C,QAAA,CAElCC,EAAAA,aACAC,EAAAA,cACAC,EAAAA,mBAAiBE,QAAA,CAEXnD","sourcesContent":["<mat-card\n    [style.width.px]=\"width\"\n>\n    <mat-grid-list \n        [cols]=\"colnum\" \n        [rowHeight]=\"ratio\" \n        [gutterSize]=\"gutter\"\n    >\n    \t<mat-grid-tile *ngFor=\"let cell of flat\" [style]=\"cell.ui\">\n          <ng-container\n            [ngTemplateOutlet]=\"slotRef\"\n            [ngTemplateOutletContext]=\"{$implicit:cell}\"\n          >\n          </ng-container>\n    \t</mat-grid-tile>\n    </mat-grid-list>\n</mat-card>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  ContentChild,\n  TemplateRef,\n  AfterContentInit\n} from \"@angular/core\";\n\nimport { calc_and_set } from \"./util\";\n\nexport interface Tile {\n  data: any;\n  ui?: any;\n  _c?: number;\n  _r?: number;\n}\n\ntype Dtb = Array<Array<Tile>>;\ntype FlatDtb = Array<Tile>;\n\n@Component({\n  selector: \"nv-small-grid-table\",\n  templateUrl: \"./small-grid-table.component.html\"\n})\nexport class SmallGridTableComponent implements OnInit {\n  @Input() dtb: Dtb;\n  public flat: FlatDtb;\n  public rownum: number;\n  public colnum: number;\n  @Input() width: string;\n  @Input() ratio: string;\n  @Input() height: string;\n  @Input() gutter: string;\n  @Input() dflt: boolean;\n  @Input() ui_func: (cell: any) => void;\n  @ContentChild(\"smallGridTableSlot\", { static: false }) slotRef: TemplateRef<\n    any\n  >;\n  constructor(private cdref: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    calc_and_set(this);\n  }\n}\n\n","export function mat_to_list(m: any) {\n  return m.flat();\n}\n\nexport function set_rc(dtb) {\n  dtb.forEach((row, r) => {\n    row.forEach((cell, c) => {\n      cell._r = r;\n      cell._c = c;\n    });\n  });\n}\n\nexport function fmt_cell_ui(flat) {\n  flat.forEach(cell => {\n      if(cell.ui === undefined) {\n        cell.ui=\"\"\n      }\n  });\n}\n\n\nexport function set_dflt(flat) {\n  flat.forEach(cell => {\n    let cond = cell._c % 2 === 1;\n    if (cond && (cell.ui === \"\")) {\n      cell.ui = \"background-color:#F8F8F8;color:#333333;font-size:18px;font-weight:400;font-family:PingFang SC;\";\n    }\n  });\n}\n\nexport function set_ui(flat,ui_func) {\n  flat.forEach(cell => {\n      ui_func(cell)\n  });\n}\n\nexport function calc_and_set(instance) {\n  set_rc(instance.dtb);\n  instance.rownum = instance.dtb.length;\n  instance.colnum = instance.dtb[0].length;\n  if (instance.ratio === undefined) {\n    let cell_width = parseInt(instance.width) / instance.rownum;\n    let cell_height = parseInt(instance.height) / instance.colnum;\n    instance.ratio = cell_width.toString() + \":\" + cell_height.toString();\n  } else {\n  }\n  if (instance.gutter === undefined) {\n    instance.gutter = \"0\";\n  } else {\n  }\n  ////\n  if (instance.dflt === undefined) {\n    instance.dflt = true;\n  } else {\n  }\n  if (instance.ui_func === undefined) {\n    instance.ui_func = (cell)=>{};\n  } else {\n  }  \n  ////\n  instance.flat = mat_to_list(instance.dtb);\n  fmt_cell_ui(instance.flat);\n  if (instance.dflt) {set_dflt(instance.flat);}\n  set_ui(instance.flat,instance.ui_func);\n}\n\n","import { NgModule,ModuleWithProviders } from '@angular/core';\nimport {\n    CommonModule\n} from '@angular/common';\n\n\n\n\nimport { SmallGridTableComponent } from './small-grid-table.component';\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\n\n\n\n@NgModule({\n    declarations: [SmallGridTableComponent],\n    imports: [\n        CommonModule,\n        MatCardModule,\n        MatGridListModule\n    ],\n    exports: [SmallGridTableComponent]\n})\nexport class SmallGridTableModule { \n  public static forRoot(): ModuleWithProviders<SmallGridTableModule> {\n    return {\n      ngModule: SmallGridTableModule,\n      providers: [],\n    }\n  }\n\n  public static forChild(): ModuleWithProviders<SmallGridTableModule> {\n    return {\n      ngModule: SmallGridTableModule,\n      providers: [],\n    }\n  }\n\n}\n"]}